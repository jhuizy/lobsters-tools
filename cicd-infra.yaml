AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a CICD pipeline for the NED application
Parameters:
  GithubBranch:
    Description: ''
    NoEcho: false
    Type: String
  GithubOwner:
    Description: ''
    NoEcho: false
    Type: String
  GithubRepo:
    Description: ''
    NoEcho: false
    Type: String
  GithubToken:
    Description: ''
    NoEcho: true
    Type: String
  StackName:
    Description: ''
    NoEcho: false
    Type: String
  TemplateConfigurationName:
    Description: ''
    NoEcho: false
    Type: String
  TemplateName:
    Description: ''
    NoEcho: false
    Type: String
Resources:
  BuildArtifactsBucket:
    Properties:
      BucketName: !Sub '${AWS::StackName}-cicd-artifacts-bucket'
    Type: AWS::S3::Bucket
  CloudformationRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:*
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: ec2-access
        - PolicyDocument:
            Statement:
              - Action:
                  - iam:*
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: iam-access
      RoleName: !Sub '${AWS::StackName}-cloudformation-deploy'
    Type: AWS::IAM::Role
  CodePipelinePipeline:
    Properties:
      ArtifactStore:
        Location: !Ref 'BuildArtifactsBucket'
        Type: S3
      Name: !Sub '${AWS::StackName}-default-pipeline'
      RoleArn: !GetAtt 'CodePipelineServiceRole.Arn'
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Branch: !Ref 'GithubBranch'
                OAuthToken: !Ref 'GithubToken'
                Owner: !Ref 'GithubOwner'
                Repo: !Ref 'GithubRepo'
              Name: get-source
              OutputArtifacts:
                - Name: source-zip
          Name: Source
        - Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt 'CloudformationRole.Arn'
                StackName: !Ref 'StackName'
                TemplateConfiguration: !Sub 'source-zip::${TemplateConfigurationName}'
                TemplatePath: !Sub 'source-zip::${TemplateName}'
              InputArtifacts:
                - Name: source-zip
              Name: cloudformation-deploy-cfn
              RunOrder: 1
          Name: Deploy
    Type: AWS::CodePipeline::Pipeline
  CodePipelineServiceRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: /managed/
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:PutObject
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:s3:::${BuildArtifactsBucket}'
                  - !Sub 'arn:aws:s3:::${BuildArtifactsBucket}/*'
            Version: '2012-10-17'
          PolicyName: !Sub 'codepipeline-s3artifact-access-${AWS::StackName}-default'
        - PolicyDocument:
            Statement:
              - Action: iam:PassRole
                Effect: Allow
                Resource:
                  - !GetAtt 'CloudformationRole.Arn'
            Version: '2012-10-17'
          PolicyName: !Sub 'codepipeline-passrole-access-${AWS::StackName}-default'
        - PolicyDocument:
            Statement:
              - Action:
                  - cloudformation:*
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: cloudformation-access
      RoleName: !Sub 'codepipeline-service-role-${AWS::StackName}-default'
    Type: AWS::IAM::Role
